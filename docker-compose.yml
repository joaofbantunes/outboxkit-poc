services:
  # https://anthonysimmon.com/the-only-local-mongodb-replica-set-with-docker-compose-guide-youll-ever-need/
  mongodb:
    image: mongo
    container_name: mongodb
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: root
  #    healthcheck:
  #      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
  #      interval: 5s
  #      timeout: 30s
  #      start_period: 0s
  #      start_interval: 1s
  #      retries: 30
  init-mongo:
    image: mongo
    container_name: init-mongo
    depends_on:
      - mongodb
    entrypoint: [
      "sh", "-c",
      "until mongosh --host mongodb --eval 'print(\"waited for connection\")'; do sleep 2; done && \
           mongosh --host mongodb --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"localhost:27017\" }]})'"
    ]
  
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
  
  lgtm:
    image: grafana/otel-lgtm
    hostname: lgtm
    container_name: lgtm
    ports:
      - "3000:3000" # ui
      - "4317:4317" # otlp gRPC
      - "4318:4318" # otlp HTTP